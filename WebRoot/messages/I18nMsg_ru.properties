# 
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Web Client
# Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016 Synacor, Inc.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software Foundation,
# version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
# ***** END LICENSE BLOCK *****
# 
# en_US generated on Fri Jan 18 11:51:15 PST 2008
currencyCode = RUB
currencySymbol = \u0440.
eraAD = \u043d.\u044d.
eraBC = \u0434\u043e \u043d.\u044d.
firstDayOfWeek = 1
formatDateFull = EEEE, d MMMM yyyy '\u0433'
formatDateLong = d MMMM yyyy '\u0433.'
formatDateMedium = d MMM yyyy '\u0433.'
formatDateShort = d.M.yy
formatDateNumber=\u041c/\u0434/\u0433\u0433\u0433\u0433
formatDateTime = {0} {1}
formatDateTimeShort = d.M.yy H:mm
formatNumber = # ##0,###
formatNumberCurrency = # ##0,00 \u00a4;(# ##0,00 \u00a4)
formatNumberInteger = # ##0
formatNumberPercent = # ##0%
formatTimeFull = H:mm:ss z
formatTimeLong = H:mm:ss z
formatTimeMedium = H:mm:ss
formatTimeShort = H:mm

# Add as many regexes as you'd like (without holes in the numbering sequence). They will in turn test the user input until a match is found.
# The first capturing group of the regex is the hours, the second is the minutes, and the third (optional) specifies am or pm time. Just leave it out if you don't need it.
# When the optional ampm group is present in a match, 12 hours will be converted to 0 hours, and when the matched value is present in 
# the parseTimePMChars value, 12 hours will be added to the time.
parseTime1 = (\\d\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime2 = (\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime3 = (\\d{1,2})(\\d*)\\s*([ap])?
parseTimePMChars = pP

monthAprLong = \u0410\u043f\u0440\u0435\u043b\u044c
monthAprMedium = \u0410\u043f\u0440
monthAugLong = \u0410\u0432\u0433\u0443\u0441\u0442
monthAugMedium = \u0410\u0432\u0433
monthDecLong = \u0414\u0435\u043a\u0430\u0431\u0440\u044c
monthDecMedium = \u0414\u0435\u043a
monthFebLong = \u0424\u0435\u0432\u0440\u0430\u043b\u044c
monthFebMedium = \u0424\u0435\u0432
monthJanLong = \u042f\u043d\u0432\u0430\u0440\u044c
monthJanMedium = \u042f\u043d\u0432
monthJulLong = \u0418\u044e\u043b\u044c
monthJulMedium = \u0418\u044e\u043b
monthJunLong = \u0418\u044e\u043d\u044c
monthJunMedium = \u0418\u044e\u043d
monthMarLong = \u041c\u0430\u0440\u0442
monthMarMedium = \u041c\u0430\u0440
monthMayLong = \u041c\u0430\u0439
monthMayMedium = \u041c\u0430\u0439
monthNovLong = \u041d\u043e\u044f\u0431\u0440\u044c
monthNovMedium = \u041d\u043e\u044f
monthOctLong = \u041e\u043a\u0442\u044f\u0431\u0440\u044c
monthOctMedium = \u041e\u043a\u0442
monthSepLong = \u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c
monthSepMedium = \u0421\u0435\u043d
numberInfinity = \u221e
numberNaN = \ufffd
numberSeparatorDecimal = ,
numberSeparatorGrouping = 
numberSeparatorMoneyDecimal = ,
numberSignMinus = -
numberSignPerMill = \u2030
numberSignPercent = %
numberZero = 0
periodAm = AM
periodPm = PM
weekdayFriLong = \u041f\u044f\u0442\u043d\u0438\u0446\u0430
weekdayFriMedium = \u041f\u044f\u0442
weekdayMonLong = \u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a
weekdayMonMedium = \u041f\u043d
weekdaySatLong = \u0421\u0443\u0431\u0431\u043e\u0442\u0430
weekdaySatMedium = \u0421\u0431
weekdaySunLong = \u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435
weekdaySunMedium = \u0412\u0441
weekdayThuLong = \u0427\u0435\u0442\u0432\u0435\u0440\u0433
weekdayThuMedium = \u0427\u0442
weekdayTueLong = \u0412\u0442\u043e\u0440\u043d\u0438\u043a
weekdayTueMedium = \u0412\u0442
weekdayWedLong = \u0421\u0440\u0435\u0434\u0430
weekdayWedMedium = \u0421\u0440
