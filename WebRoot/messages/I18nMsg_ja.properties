#
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Web Client
# Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016 Synacor, Inc.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software Foundation,
# version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
# ***** END LICENSE BLOCK *****
#
# en_US generated on Fri Jan 18 11:51:15 PST 2008
currencyCode = JPY
currencySymbol = \u00a5
eraAD = AD
eraBC = BC
firstDayOfWeek = 1
formatDateFull = yyyy\u5e74MMMMd\u65e5, EEEE
formatDateLong = yyyy'\u5e74'MM'\u6708'dd'\u65e5'
formatDateMedium = yyyy'\u5e74'M'\u6708'd'\u65e5'
formatDateShort = yy/M/d
formatDateNumber=yyyy/M/d
formatDateTime = {0} {1}
formatDateTimeShort = yy/M/d a K:mm
formatNumber = #,##0.###
formatNumberCurrency = \u00a4#,##0.00;(\u00a4#,##0.00)
formatNumberInteger = #,##0
formatNumberPercent = #,##0%
formatTimeFull = a K:mm:ss z
formatTimeLong = a K:mm:ss z
formatTimeMedium = a K:mm:ss
formatTimeShort = a K:mm

# Add as many regexes as you'd like (without holes in the numbering sequence). They will in turn test the user input until a match is found.
# The first capturing group of the regex is the hours, the second is the minutes, and the third (optional) specifies am or pm time. Just leave it out if you don't need it.
# When the optional ampm group is present in a match, 12 hours will be converted to 0 hours, and when the matched value is present in 
# the parseTimePMChars value, 12 hours will be added to the time.
parseTime1 = (\\d\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime2 = (\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime3 = (\\d{1,2})(\\d*)\\s*([ap])?
parseTimePMChars = pP

monthAprLong = 4\u6708
monthAprMedium = 4\u6708
monthAugLong = 8\u6708
monthAugMedium = 8\u6708
monthDecLong = 12\u6708
monthDecMedium = 12\u6708
monthFebLong = 2\u6708
monthFebMedium = 2\u6708
monthJanLong = 1\u6708
monthJanMedium = 1\u6708
monthJulLong = 7\u6708
monthJulMedium = 7\u6708
monthJunLong = 6\u6708
monthJunMedium = 6\u6708
monthMarLong = 3\u6708
monthMarMedium = 3\u6708
monthMayLong = 5\u6708
monthMayMedium = 5\u6708
monthNovLong = 11\u6708
monthNovMedium = 11\u6708
monthOctLong = 10\u6708
monthOctMedium = 10\u6708
monthSepLong = 9\u6708
monthSepMedium = 9\u6708
numberInfinity = \u221e
numberNaN = \ufffd
numberSeparatorDecimal = .
numberSeparatorGrouping = ,
numberSeparatorMoneyDecimal = .
numberSignMinus = -
numberSignPerMill = \u2030
numberSignPercent = %
numberZero = 0
periodAm = \u5348\u524d
periodPm = \u5348\u5f8c
weekdayFriLong = \u91d1\u66dc\u65e5
weekdayFriMedium = \u91d1
weekdayMonLong = \u6708\u66dc\u65e5
weekdayMonMedium = \u6708
weekdaySatLong = \u571f\u66dc\u65e5
weekdaySatMedium = \u571f
weekdaySunLong = \u65e5\u66dc\u65e5
weekdaySunMedium = \u65e5
weekdayThuLong = \u6728\u66dc\u65e5
weekdayThuMedium = \u6728
weekdayTueLong = \u706b\u66dc\u65e5
weekdayTueMedium = \u706b
weekdayWedLong = \u6c34\u66dc\u65e5
weekdayWedMedium = \u6c34
