# 
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Web Client
# Copyright (C) 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2016 Synacor, Inc.
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software Foundation,
# version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <https://www.gnu.org/licenses/>.
# ***** END LICENSE BLOCK *****
# 
# en_US generated on Fri Jan 18 11:51:15 PST 2008
currencyCode = KRW
currencySymbol = $
eraAD = AD
eraBC = BC
firstDayOfWeek = 1
formatDateFull = yyyy\ub144 MMMM d\uc77c, EEEE
formatDateLong = yyyy\ub144 MMMM d\uc77c
formatDateMedium = yyyy\ub144 MMM d\uc77c
formatDateShort = yy. M. d
formatDateNumber=yyyy\ub144 M\uc6d4 d\uc77c
formatDateTime = {0} {1}
formatDateTimeShort = yy. M. d a h:mm
formatNumber = #,##0.###
formatNumberCurrency = \u00a4#,##0.00;(\u00a4#,##0.00)
formatNumberInteger = #,##0
formatNumberPercent = #,##0%
formatTimeFull = a h:mm:ss z
formatTimeLong = a h:mm:ss z
formatTimeMedium = a h:mm:ss
formatTimeShort = a h:mm

# Add as many regexes as you'd like (without holes in the numbering sequence). They will in turn test the user input until a match is found.
# The first capturing group of the regex is the hours, the second is the minutes, and the third (optional) specifies am or pm time. Just leave it out if you don't need it.
# When the optional ampm group is present in a match, 12 hours will be converted to 0 hours, and when the matched value is present in 
# the parseTimePMChars value, 12 hours will be added to the time.
parseTime1 = (\\d\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime2 = (\\d)[\\.\\:\\s]?(\\d\\d)\\s*([ap])?
parseTime3 = (\\d{1,2})(\\d*)\\s*([ap])?
parseTimePMChars = pP

monthAprLong = 4\uc6d4
monthAprMedium = 4\uc6d4
monthAugLong = 8\uc6d4
monthAugMedium = 8\uc6d4
monthDecLong = 12\uc6d4
monthDecMedium = 12\uc6d4
monthFebLong = 2\uc6d4
monthFebMedium = 2\uc6d4
monthJanLong = 1\uc6d4
monthJanMedium = 1\uc6d4
monthJulLong = 7\uc6d4
monthJulMedium = 7\uc6d4
monthJunLong = 6\uc6d4
monthJunMedium = 6\uc6d4
monthMarLong = 3\uc6d4
monthMarMedium = 3\uc6d4
monthMayLong = 5\uc6d4
monthMayMedium = 5\uc6d4
monthNovLong = 11\uc6d4
monthNovMedium = 11\uc6d4
monthOctLong = 10\uc6d4
monthOctMedium = 10\uc6d4
monthSepLong = 9\uc6d4
monthSepMedium = 9\uc6d4
numberInfinity = \u221e
numberNaN = \ufffd
numberSeparatorDecimal = .
numberSeparatorGrouping = ,
numberSeparatorMoneyDecimal = .
numberSignMinus = -
numberSignPerMill = \u2030
numberSignPercent = %
numberZero = 0
periodAm = \uc624\uc804
periodPm = \uc624\ud6c4
weekdayFriLong = \uae08\uc694\uc77c
weekdayFriMedium = \uae08
weekdayMonLong = \uc6d4\uc694\uc77c
weekdayMonMedium = \uc6d4
weekdaySatLong = \ud1a0\uc694\uc77c
weekdaySatMedium = \ud1a0
weekdaySunLong = \uc77c\uc694\uc77c
weekdaySunMedium = \uc77c
weekdayThuLong = \ubaa9\uc694\uc77c
weekdayThuMedium = \ubaa9
weekdayTueLong = \ud654\uc694\uc77c
weekdayTueMedium = \ud654
weekdayWedLong = \uc218\uc694\uc77c
weekdayWedMedium = \uc218
